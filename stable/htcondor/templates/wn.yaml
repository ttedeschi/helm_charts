{{- if .Values.nfs.enabled -}}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs
spec:
  capacity:
    storage: "{{.Values.nfs.size}}"
  accessModes:
    - ReadWriteMany
  nfs:
    server: "{{.Values.nfs.server}}"
    path: "{{.Values.nfs.path}}"
{{- end }}

---

{{- if .Values.nfs.enabled -}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: "{{.Values.nfs.size}}"
{{- end }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wn-pod
  labels:
    app: wn
spec:
  template:
    metadata:
      labels:
        app: wn
    spec:
      dnsPolicy: None
      dnsConfig:
        nameservers:
        - 8.8.8.8
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: condor
                operator: NotIn
                values:
                - ccb
                - schedd
      containers:
      - name: wn
        imagePullPolicy: Always
        args:
        - wn 
        env:
        - name: CONDOR_HOST 
          value: "{{ .Values.CONDOR_HOST }}"
        - name: PROXY_CACHE 
          value: "{{ .Values.PROXY_CACHE }}:{{ .Values.PROXY_CACHE_Port }}"
        - name: CCB_ADDRESS
          value:  "{{ .Values.CCB_HOST }}"
        - name: SLOT_TYPE_1
          value: "{{ .Values.SLOT_TYPE_1 }}"

        image: "{{ .Values.condor_image }}"
        livenessProbe:
          exec:
            command:
            - voms-proxy-info
            - --file
            - /root/gwms_proxy
            - --exists
          initialDelaySeconds: 300
          periodSeconds: 600
        resources:
          limits:
            memory: "2500Mi"
            cpu: "1.5"
          requests: 
            memory: "2048Mi"
            cpu: "1"
        volumeMounts:
{{- if .Values.nfs.enabled -}}
        - name: nfs
          mountPath: "/mnt"
{{- end }}
{{- if .Values.cvmfs.enabled -}}
        - name: cvmfs
          mountPath: "/cvmfs"
{{- end }}

      volumes:
{{- if .Values.nfs.enabled -}}
      - name: nfs
        persistentVolumeClaim:
          claimName: nfs
{{- end }}
{{- if .Values.cvmfs.enabled -}}
      - name: cvmfs
        hostPath:
          path: /cvmfs
          type: Directory
{{- end }}

  selector:
    matchLabels:
      app: wn 

  replicas: 1
